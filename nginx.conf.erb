user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 768;
  multi_accept on;
}

http {
  client_max_body_size 8M;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;
  gzip on;
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://;
  }

#
# run locally for standalone capability.
#
  server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    location /app {
      proxy_pass_header  Set-Cookie;
      proxy_set_header   Host               $host;
      proxy_set_header   X-Real-IP          $remote_addr;
      proxy_set_header   X-Forwarded-Proto  $scheme;
      proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_buffering off;
      proxy_pass http://127.0.0.1:4567/;
    }
    # devices
    <% DEVS.each_pair do |k,v| %>
location /dev/<%= k %> {
      proxy_pass_header  Set-Cookie;
      proxy_set_header   Host               $host;
      proxy_set_header   X-Real-IP          $remote_addr;
      proxy_set_header   X-Forwarded-Proto  $scheme;
      proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_buffering off;
      proxy_pass http://<%= v %>;
}
<% end %>
}

#
# include config'd domains.
# run:
#
# export DOMAIN=''; export PORT=''; ./nomad.sh config
#
# to create a new domain config.
#
include /etc/nginx/sites-enabled/*;

}
