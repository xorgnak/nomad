
var video = document.createElement("video");
var canvasElement = document.getElementById("canvas");
var canvas = canvasElement.getContext("2d");
// Use facingMode: environment to attemt to get the front camera on phones
navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
    video.srcObject = stream;
    video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
    video.play();
    // log("<span class='material-icons'>qr_code_2</span> share.");
    // log("<span class='material-icons'>settings</span> customize.");
    log("<a href='mumble://vango.me' class='material-icons' style='text-decoraton: none; color: white;'>radio</a> connect.");
    requestAnimationFrame(tick);
});
function tick() {
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
	canvasElement.height = video.videoHeight;
	canvasElement.width = video.videoWidth;
	canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
	var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
	var code = jsQR(imageData.data, imageData.width, imageData.height, { inversionAttempts: 'dontInvert' });
	var dom = /<%= @path.gsub('://', ':\/\/') %>/g;
	if (code) {
	    if (dom.test(code.data)) {
		var h = {};
		var o = code.data.split('?');
		var kv = o[1].split('&');
		var u;
		kv.forEach(function(v, i, obj) {
		    var oo = v.split('=');
		    h[oo[0]] = oo[1]
		});
		log("<span class='material-icons'>qr_code_2</span> " + JSON.stringify(h));

$('form').append("<input type='hidden' name='target' value='" + h.u + "'>");
$('#boss').text(h.b);
$('#rank').text(h.r);
$('#xp').text(h.p);
$('#class').text(h.c);
$('#z').text(h.x);
		$('#scan').val(h.u);
		$('#view').hide();
		$('#display').hide();
		$('#magic').show();
		//mine(h.u);
	    }
	}
    }
    requestAnimationFrame(tick);
} 
