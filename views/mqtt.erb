<% if /^https/.match(request.url) %>
var client = new Paho.Client('<%= request.host %>', 8883, "<%= @id %>");
<% else %>
var client = new Paho.Client('<%= request.host %>', 8083, "<%= @id %>");
<% end %>
// set callback handlers
client.onConnectionLost = onConnectionLost;
client.onMessageArrived = onMessageArrived;

function connectMqtt() {
// connect the client
client.connect({ onSuccess: onConnect,
userName: '<%= @id %>',
password: 'password',
cleanSession: true,
<% if /^https/.match(request.url) %>
useSSL: true
<% end %>
});
}

// called when the client connects
function onConnect() {
    // Once a connection has been made, make a subscription and send a message.
    console.log("onConnect");
    client.subscribe("<%= @id %>");
    
    //message = new Paho.MQTT.Message("OK");
    //message.destinationName = "INIT";
    //client.send(message);
}

// called when the client loses its connection
function onConnectionLost(responseObject) {
    if (responseObject.errorCode !== 0) {
	console.log(responseObject);
    }
    //location.reload(true);
    connectMqtt();
}

function handleMqtt(m) {
var j = JSON.parse(m);
console.log(j);
//    log('<span class="material-icons">' + j.title || 'update' + '</span> ' + j.body || 'update!');
//    self.registration.showNotification(j.title || 'update', { body: j.body || 'update!' });
}

// called when a message arrives
function onMessageArrived(message) {
    log("<span class='material-icons'>message</span>" + message.payloadString);
}

connectMqtt();